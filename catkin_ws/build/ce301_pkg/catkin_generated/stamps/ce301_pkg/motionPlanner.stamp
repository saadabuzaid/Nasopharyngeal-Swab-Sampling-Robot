#!/usr/bin/python
from __future__ import print_function


import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg

print("====== Starting tutorial setup")
moveit_commander.roscpp_initialize(sys.argv)
rospy.init_node('move_group_python_interface_tutorial',anonymous=True)
robot = moveit_commander.RobotCommander()
scene = moveit_commander.PlanningSceneInterface()
move_group = moveit_commander.MoveGroupCommander("manipulator")
display_trajectory_publisher = rospy.Publisher('move_group/display_planned_path',moveit_msgs.msg.DisplayTrajectory)

print ("====== Waiting for RVIZ ...")
#rospy.sleep(20)
print ("====== Starting tutorial")
print ("====== Robot Groups:")
print (robot.get_group_names())
print ("====== Printing robot state")
print (robot.get_current_state())
print ("=============")


print ("=============")
print(move_group.get_current_pose().pose)

pose_goal = geometry_msgs.msg.Pose()

pose_goal.position.x += 0.5
pose_goal.position.y = 0.5
pose_goal.position.z = 0.5


move_group.set_pose_target(pose_goal)
plan = move_group.go(wait=True)
# Calling `stop()` ensures that there is no residual movement
move_group.stop()
# It is always good to clear your targets after planning with poses.
# Note: there is no equivalent function for clear_joint_value_targets()
move_group.clear_pose_targets()

